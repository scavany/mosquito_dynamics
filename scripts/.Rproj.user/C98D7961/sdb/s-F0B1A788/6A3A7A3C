{
    "collab_server" : "",
    "contents" : "#======================================================================================\n# Author: Guido Espana\n# project: PLOS COMP BIO paper 2016 Iquitos \n#          GSK trial simulations\n# Year: 2016\n# \n# Code to derive the location and time specific emergence of mosquitoes in Iquitos, \n# based on weekly adult sampling data. \n#\n# Files needed:\n# ../data/locations_20140807.csv\n# ../data/Iquitos_Climate_Bobby.csv\n# response_curves.R\n# algam_85re.Rdata\n# EstimateSurface[1.1,1.35,1.6,1.7,1.9.2].RData\n# \n#======================================================================================\n# Load libraries and source files --------\n#======================================================================================\nrm(list = ls())\n\n# Set your working directory to the scripts folder\nlibrary(here)\nsetwd(here())\n\nrequire(mgcv)\nrequire(scam)\nrequire(deSolve)\nlibrary(doParallel)\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(dlnm,\n               mgcv,\n               scam,\n               mapproj,\n               maptools,\n               spatstat,\n               RgoogleMaps,\n               RColorBrewer,\n               plotrix,\n               rgdal,\n               rgeos,\n               ggplot2,\n               raster,\n               gridExtra,\n               splines,\n               zoo)\n\nsource('./generate_emergence_functions.R')\nsource('response_curves.R')\n\n\n#======================================================================================\n# Load data -----------------\n#======================================================================================\ntvec = seq(as.Date(\"2000-01-01\"),as.Date(\"2010-12-31\"),by=\"1 day\")\nLocations = read.csv(\"../data/locations_area_20140807.csv\")\nLocations_original = Locations\nHouse_area = mean(Locations_original$area[which(Locations_original$landuse==\"HOUSE\")])\n\n\n#======================================================================================\n# Parameters ----------\n#======================================================================================\nproto_pac = 5\n# ratios of mosquito productivity per landuse relative to Houses (Morrisson 2006)\nLandUseRatios = c(0.03, 0.01, 0.09, 1, 0.09, 0.09, 0.05, 0.003, 0.09,0.3) \n\n# Derived parameters\ncol.names = levels(Locations$landuse)\nnlandusetypes = length(col.names)\ncolClasses = c(rep(\"numeric\",nlandusetypes))\n\nProdR = read.table(text = \"\",\n                    colClasses = colClasses,\n                    col.names = col.names)  # table of landuseratios\nProdR[1,] = LandUseRatios  \nHouses = which(Locations$landuse==\"HOUSE\")\n\n# Including the Productivity ratio as an array in the Locations file \nProdRatio = array(data = 0, dim = c(length(Locations[,1])))\nfor(i in 1:length(Locations[,1])){\n  type = Locations$landuse[i]\n  ProdRatio[i] = ProdR[,eval(type)] \n}\n# Takes area into consideration by dividing the area by the avg house area\n# Houses are assumed to have an average House area\n# Other locations can't be more than 2 times a house\n\nLocations$ProdRatioArea = ProdRatio * Locations$area /  House_area\nLocations$ProdRatioArea[which(Locations$landuse == \"HOUSE\")] = 1\nLocations$ProdRatioArea[which(Locations$ProdRatioArea > 2)] = 2\n\n# 100 Localities are used to calculate the relationship between emergence and space\nSmallLocations = Locations[10000:10100,]  \n\n\n#======================================================================================\n# Read temperature specific for Iquitos ------\n#======================================================================================\nIquitos.climate = read.csv('../data/Iquitos_Climate_Bobby.csv')\nstartIndex = which(Iquitos.climate$date == as.character(tvec[1])) \ntemperature = Iquitos.climate$temperature_mean[startIndex:(startIndex + length(tvec)-1) ]\ntemp.mean = mean(temperature,na.rm = TRUE); temperature[is.na(temperature)] = temp.mean\n\n\n#======================================================================================\n# calculate mortality ------------\n#======================================================================================\nDeathRate = get_mortality_vector(tvec, temperature)\n\n#======================================================================================\n# Calculate Surface Space + Time for a small dataset --------\n#======================================================================================\noffsets = c(\"1.1\",\"1.35\",\"1.6\",\"1.7\",\"1.9\", \"2\")\n# small_abundance_surf = list()\no_f = offsets[6]\neval(parse(text = sprintf(\"load(\\\"EstimateSurface%s%s\\\")\",o_f,\".RData\")))\nXY = cbind(SmallLocations$xcor,SmallLocations$ycor)\nsmall_abundance_surf = Estimate.w.offset(XY,tvec,as.numeric(o_f)) # Log -- Est: [[1]] Std: [[2]]\nEmergence.data = get_emergence_timeseries(1,exp(small_abundance_surf[[1]]), DeathRate, tvec)\nEmergence_TS = Emergence.data$Emergence_Timeseries /  Emergence.data$Emergence_Timeseries[1]\n\nsave(Emergence_TS,file = sprintf(\"../data/Emergence%s.RData\",o_f))\n\n#======================================================================================\n# Calc. the relationship of initial  abundance and emergence rates in time -----------\n#======================================================================================\nemerge_correction_factor = array(0,length(SmallLocations[,1]))\nEmergence.data = get_emergence_timeseries(1,exp(small_abundance_surf[[1]]), DeathRate, tvec)\n\n# The ODE uses Emergence_TS and deathrate as global variables\nEmergence_TS = Emergence.data$Emergence_Timeseries /  Emergence.data$Emergence_Timeseries[1] \nparams.init = c(cor_factor = 1)\ntimes = seq(1,length(DeathRate)-1,1)\nfor(i in 1:length(SmallLocations[,1])){\n  Emergence.data =\n    get_emergence_timeseries(i, exp(small_abundance_surf[[1]]) * proto_pac, DeathRate, tvec)\n  yinit = c(N = Emergence.data$N[1])\n  out.N1 = ode(yinit,times,pop.model.ode,params.init)\n  # Calculate the mismatch between the mosquito abundance data and the ODE output\n  emerge_correction_factor[i] = \n    mean(Emergence.data$N[2:length(Emergence.data$N)-1] / out.N1[2:length(Emergence.data$N)-1,2])\n}\n\n# the relationship is a straight line with intercept in 0, so I'm calculating the slope and that's it !\nm_emerge = (max(emerge_correction_factor) - min(emerge_correction_factor)) / \n  (max(exp(small_abundance_surf[[1]][,1]) * proto_pac) - min(exp(small_abundance_surf[[1]][,1])) * proto_pac) \n\n\n#======================================================================================\n# Calculate Total Surface Space in time 0 -----------\n#======================================================================================\nXY = cbind(Locations$xcor,Locations$ycor)\nabundance_surf_init = Estimate.w.offset(XY,tvec,as.numeric(o_f)) # Log -- Est: [[1]] Std: [[2]]\n\n#======================================================================================\n# Write to output---------\n#======================================================================================\nLocations$emerge = m_emerge * exp(abundance_surf_init[[1]]) * proto_pac\nLocationsMosquitoes = Locations[c(1:7,11)]\nwrite.csv(LocationsMosquitoes,\"../output/Locations20160720.csv\",row.names = F, quote = FALSE)\n\n# save(Emergence_TS,file = sprintf(\"../data/Emergence%s.RData\",o_f))\n",
    "created" : 1531943167671.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2122011442",
    "id" : "6A3A7A3C",
    "lastKnownWriteTime" : 1531943240,
    "last_content_update" : 1531943240846,
    "path" : "/Volumes/GuidoSSD1/Dropbox/Guido_Postdoc/iquitos_abm_paper_2016/climate_PLOS_paper/scripts/generate_emergence_file.R",
    "project_path" : "generate_emergence_file.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}